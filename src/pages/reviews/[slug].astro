---
import ReviewLayout from "../../layouts/ReviewLayout.astro";
import ReviewSummary from "../../layouts/components/ReviewSummary.astro";

import { getAllReviews } from '../../lib/api.js';
import { urlForImage } from '../../lib/imageBuilder.js';

export async function getStaticPaths() {
    const allReviews = await getAllReviews();

    return allReviews.map(review => ({
      params: {
        slug: review.slug.current
      },
      props: {
        review
      }
    }))
}

const { review } = Astro.props;

const stats:String[] = [];
Object.keys(review.rating).map((rating) => {
  stats.push(
    { 
      key : rating,
      value: review.rating[rating]
    }
  )
})

const title = review.brand + ' ' + (review.range ?? '');

//TODO: add the overal score somewhere
---
<ReviewLayout title={title}>
  <div slot='hero' class='h-96 w-full overflow-hidden relative'>
    <div class="grid place-content-center absolute w-full h-full">
      <h1 class="rounded-full m-8 text-4xl bg-mincepiebg-500 p-8">{title}</h1>
    </div>
    <img src={urlForImage(review.image)} class="object-none object-center min-h-full" />
  </div>


  <div class="gap-2 md:gap-8 flex flex-wrap justify-center mx-4 my-8 sm:mx-4 md:mx-0">
    {stats.map((stat) =>
      <div class='bg-pie-600 w-full py-2 px-4 text-center md:text-left md:w-auto rounded-full p-2 uppercase text-mincepiebg-500 font-bold'>
        {stat.key} : {stat.value}
      </div>
    )}
  </div>
  <div class="md:w-5/6 md:m-auto lg:w-1/2 mx-4 text-center bg-pie-600 rounded-full text-mincepiebg-500 py-2 font-bold text-2xl">
    {review.overall} / 20
  </div>
  <div class="gap-8 grid justify-center text-xl mt-8 m-auto w-5/6">
    {review.description}
    <ReviewSummary review={review} />
  </div>
</ReviewLayout>