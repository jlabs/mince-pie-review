---
import ReviewLayout from "../../layouts/ReviewLayout.astro";
import { reviews } from "../../data/reviews";

export function getStaticPaths() {
    const pages = reviews;

    return pages.map(({ slug, id }) => {
        return {
            params: { slug },
            props: { id }
        }
    })
}

const { slug } = Astro.params;
const { id } = Astro.props;

const review = reviews.filter(r => r.slug == slug)[0]
const ratings = review.rating;
const published = new Date(review.published);

//TODO: add the overal score somewhere
---
<ReviewLayout>
  <div slot='hero' class='h-96 w-full overflow-hidden relative'>
    <div class="grid place-content-center absolute w-full h-full">
      <h2 class="rounded-full m-8 text-4xl bg-mincepiebg-500 p-8">{review.brand} {review.range}</h2>
    </div>
    <img src={review.image} class="object-none object-center min-h-full" />
  </div>


  <div class="gap-8 w-full flex flex-wrap justify-start md:justify-center my-8 mx-4 md:mx-0">
    {Object.keys(ratings).map((rating) =>
      <div class='bg-pie-600 rounded-full p-2 px-4 uppercase text-mincepiebg-500 font-bold'>
        {rating} : {ratings[rating]}
      </div>
    )}
  </div>
  <div class="gap-8 grid justify-center text-xl mt-8 m-auto w-5/6">
    {review.description}
    <div class="bg-pie-600 rounded-lg overflow-hidden">
      <div class="grid grid-cols-3 text-sm">
        <dl class='p-2 text-mincepiebg-500'>
          <dt>Published</dt>
          <dd class='ml-4'>{published.toString()}</dd>
          <dt>Overall Rating</dt>
          <dd class='ml-4'>{review.overal} / 20</dd>
          <dt>Reviewers</dt>
          <dd class='ml-4'>{review.reviewers}</dd>
          <dt>Price</dt>
          <dd class='ml-4'>Â£{review.price}</dd>
        </dl>
        <img src={review.image} alt="" class='h-full object-cover col-start-2 col-span-2'>
      </div>
    </div>
  </div>
</ReviewLayout>